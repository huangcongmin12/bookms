<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd" 
				default-autowire="byName" default-lazy-init="true">
				
	<!-- 扫描类包已启动注解驱动的bean，并自动注入 -->
    <context:component-scan base-package="com.dao"/>
    <context:component-scan base-package="com.service"/>
    <context:component-scan base-package="com.action"/>
    
    <!-- 加载JDBC配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 配置数据源 -->
	<bean id="dataSource" 
        class="com.mchange.v2.c3p0.ComboPooledDataSource">    
        <property name="driverClass" value="${jdbc.driverClass}"/>    
        <property name="jdbcUrl" value="${jdbc.url}" />    
        <property name="user" value="${jdbc.username}"/>    
        <property name="password" value="${jdbc.password}"/>    
        <property name="minPoolSize" value="10"/>    
        <property name="maxPoolSize" value="60"/>    
        <property name="initialPoolSize" value="15"/>    
        <property name="maxIdleTime" value="60"/>    
        <property name="acquireIncrement" value="5"/>    
        <property name="maxStatements" value="10"/>    
        <property name="idleConnectionTestPeriod"  value="60"/>    
        <property name="acquireRetryAttempts"  value="30"/>    
        <property name="breakAfterAcquireFailure" value="true"/>    
        <property name="testConnectionOnCheckout" value="true"/>    
    </bean>    
       
    <!-- Hibernate SessionFactory -->   
    <bean id="sessionFactory"    
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">    
        <property name="dataSource">    
            <ref local="dataSource" />    
        </property>  
        <property name="annotatedClasses">
			<list>
				<value>com.model.Student</value>
				<value>com.model.Book</value>
				<value>com.model.Borrow</value>
				<value>com.model.Manager</value>
				<value>com.model.Appointment</value>
				<value>com.model.Amercement</value>
			</list>
		</property>
        <property name="hibernateProperties">    
            <props>    
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>    
                <prop key="hibernate.show_sql">true</prop> 
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>    
                <prop key="hibernate.connection.release_mode">auto</prop>    
                <prop key="hibernate.autoReconnect">true</prop> 
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>    
        </property>    
    </bean> 
    
    <!-- 配置BaseDao -->
    <bean id="baseDao" class="com.dao.implement.BaseDao" scope="singleton">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
    
    <!-- 注册一个hibernate事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 使用annotation定义一个基于@Transactional注解方式的事务管理 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 开启切面注解处理器 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 将日志切面交给Spring容器管理 -->
	<bean id="myLogger" class="com.logger.MyLogger"/>
	
</beans>